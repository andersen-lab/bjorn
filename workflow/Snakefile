import sys
sys.path.append('../')
import pandas as pd
import json
import argparse

# COLLECTING USER PARAMETERS
parser = argparse.ArgumentParser()
parser.add_argument("-u", "--username",
                        type=str,
                        required=True,
                        help="Username to use for downloading API feed from GISAID")
parser.add_argument("-p", "--password",
                        type=str,
                        required=True,
                        help="Password to use for downloading API feed from GISAID")
args = parser.parse_args()

gisaid_username = args.username
gisaid_password = args.password

# load user parameters
configfile: "config.json"

username = config['username']
password = config['password']

gisaid_sequences_filepath = config['gisaid_fasta']
reference_filepath = config['ref_fasta']


rule all:
    input:
        gisaid_sequences_filepaths, # input data (signal)
        reference_filepath, # input data (patient zero)
        fasta_filepath, # cat 
        sam_filepath, # minimap2 -> mafft
        msa_filepath, # data2funk -> gofasta
        data_filepath, # output data (signal)


rule chunk_fasta:
    input:
        gisaid_sequences_filepath,
    output:
        samples_filepath



rule add_reference:
    input:
        gisaid_sequences_filepaths,
        reference_filepath
    output:
        gisaid_sequences_filepaths
    threads: 1
    shell:
        """
        cat {input.reference_filepath} {input.gisaid_sequences_filepath} > {output.fasta_filepath}
        """


rule run_minimap2:
    input:
        fasta_filepath,
        reference_filepath
    output:
        sam_filepath
    params:
        num_cpus
    shell:
        """
        minimap2 -a -x asm5 -t {params.num_cpus} {input.reference_filepath} {input.fasta_filepath} -o {output.sam_filepath}
        """


rule run_data2funk:
    input:
        sam_filepath,
        reference_filepath
    output:
        msa_filepath
    shell:
        """
        datafunk sam_2_fasta -s {input.sam_filepath} -r {input.reference_filepath} -o {output.msa_filepath} --pad --log-inserts
        """


rule run_bjorn:
    input:
        msa_filepath
    